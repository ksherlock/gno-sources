int fooseek(FILE *fptr, long pos, int whence);
unsigned long UPDC32(int val,unsigned long crc);
int noxrd7(void);
void stohdr(long int pos);
long rclhdr(char *hdr);
int zrbhdr(char *hdr);
int zrbhd32(char *hdr);
int zrhhdr(char *hdr);
void zputhex(int c);
void zsendline(int c);
int zgeth1(void);
int zdlread(void);
int zgethex(void);
int zgethdr(char *hdr, int eflag);
int zsda32(char *buf, int length, int frameend);
int zsbh32(int len, char *hdr, int type, int flavour);
int zrdata(char *buf, int length);
int zsdata(char *buf, int length, int frameend);
int zshhdr(int len, int type, char *hdr);
int zsbhdr(int len, int type, char *hdr);
void zsdar32(char *buf, int length, int frameend);
int zrdatr32(char *buf, int length);
int zrdat32(char *buf, int length);
long getfree(void);
void bibi(int n, int code);
void exec2(char *s);
void usage(void);
int wcreceive(int argc, char **argp);
int wcrxpn(char *rpn);
int wcrx(void);
int garbitch(void);
int wcgetsec(char *rxbuf, int maxtime);
int procheader(char *name);
void openit(char *name, char *openmode);
int make_dirs(char *pathname);
int mkdir(char *dpath, int dmode);
int putsec(char *buf, int n);
char *substr(char *s, char *t);
void report(int sct);
void chkinvok(char *s);
void checkpath(char *name);
int tryz(void);
int rzfiles(void);
int rzfile(void);
int closeit(void);
void ackbibi(void);
int sys2(char *s);
FILE *fdopen(int, char *);
void vfile(char *fmt, ...);
int unlink(char *name);
int mode(int n);
int wcputsec(char *buf, int sectnum, int cseclen);
int zsendcmd(char *buf, int blen);
void saybibi(void);
int getinsync(int flag);
int zsendfdata(void);
int zsendfile(char *buf, int blen);
int sendzsinit(void);
int getzrxinit(void);
int zfilbuf(void);
int filbuf(char *buf, int count);
int wctx(long int flen);
int getnak(void);
int wctxpn(char *name);
int wcs(char *oname);
int wcsend(int argc, char *argp[]);
void chartest(int m);
void countem(int argc, char **argv);
int zsdata(char *buf, int length, int frameend);

/* RBSB.C */
void flushmoc(void);
void flushmo(void);
int readline(int timeout);
void canit(void);
void inittty(void);
void purgeline(void);
void zmputs(char *s);

/* SZ.C */
void zperr(char *fmt, ...);
