.\"  Figlet
.\"  Copyright (C) 1991, 1993 Glenn Chappell and Ian Chai
.\"  Internet: <ggc@uiuc.edu> and <spectre@uiuc.edu>
.\"  Figlet, along with the various Figlet fonts and documentation, may
.\"  be freely copied and distributed.
.\"  If you use Figlet, please send an e-mail message to
.\"  <spectre@uiuc.edu>.
.\"
.TH FIGLET 6 "5 August 1993" "v2.0"

.SH NAME
figlet \- print in large characters made up of ordinary screen characters
.SH SYNOPSIS
.B figlet
[
.B \-clnptvDEF
] [
.B \-m
.I smushmode
] [
.B \-w
.IR outputwidth
]
.if n .ti +0.5i
[
.B \-d
.IR fontdirectory
] [
.B \-f
.I fontfile
]

.SH DESCRIPTION
.B figlet
prints its input using large characters made up of ordinary
screen characters.
.B figlet
output is generally reminiscent of the
sort of ``signatures'' many people like to put at the end of e-mail
and UseNet messages, and is oriented normally, not sideways as in
many banner programs.

.B figlet
can print in a variety of fonts, with adjacent characters
``smushed'' together in various ways.
.B figlet
fonts are stored in
separate files, which can be identified by the suffix
.RB `` .flf ''.
.B figlet
Most
.B figlet
font files will be stored in
.B figlet's
default font directory.

.SH USAGE
Just start up
.B figlet
(type
.RB `` figlet '')
and then type whatever you want.
Alternatively, pipe a file or the output of another command through
.BR figlet .
See
.B EXAMPLES
for other things to do.

.SH OPTIONS
.B figlet
reads command line options from left to right, and only the last
option that affects a parameter has any effect.  Every option (except
.B \-v
and
.BR \-F )
has an inverse, so that, for example, if
.B figlet
is customized with a C-shell
.BR alias ,
all the options are still available.
.TP
.B \-c
.\".PD 0
.TP
.B \-l
.\".PD
.B \-c
centers the output horizontally.
.B \-l
puts it back to left-justified (default).
.TP
.B \-d \ fontdirectory
Change the default font directory.
.B figlet
looks for fonts first in the
default directory and then in the current directory.  If the
.B \-d
option is not specified,
.B figlet
uses the directory that was specified
when it was compiled.  To find out which directory this is, use the
.B \-F
option.
.TP
.B \-f \ fontfile
Select the font.  The
.B .flf
suffix may be left off of
.IR fontfile ,
in which case
.B figlet
automatically appends it.
.B figlet
looks for the file first in the default font directory and then
in the current directory, or, if
.I fontfile
was given as a full pathname, in the given directory.
.TP
.B \-w \ outputwidth
Sets the
.I outputwidth
to the given integer.
.B figlet
uses the outputwidth to determine when to break lines and how to center
the output.  Normally,
.B figlet
assumes 80 columns so that people with wide terminals
won't annoy the people they e-mail
.B figlet
output to.
.B \-w
and
.B \-t
override each other.
.TP
.B \-m \ smushmode
Specifies how
.B figlet
should ``smush'' consecutive characters together.
This option is rarely needed, as a
.B figlet
font file specifies the best smushmode to use with the font.
.I smushmode
can be one of:

.RS
.TP
.BR -2 " Get mode from font file (default)."
Every
.B figlet
font file specifies the best
.I smushmode
to use with the font.  This will be one of the following
.I smushmodes
.RB ( -1
through
.BR 63 ).
.TP
.BR -1 " No smushing."
Characters are simply concatenated together.

In any non-negative
.I smushmode
.B figlet
pushes adjacent font characters together until their non-blank portions
touch.  At that point, it may or may not push the two font characters 1
screen character closer, depending on the
.IR smushmode .
Pushing font characters one step closer requires ``smushing'' two
non-blank screen characters into a single screen character.
.B figlet
has 6 ways of doing this, represented by 1, 2, 4, 8, 16 and 32.  The
various non-negative
.I smushmodes
.RB ( 0 - 63 )
are obtained by adding up the numbers corresponding to the sort of
smushing
.B figlet
should do.
.TP
.BR 1 " Smush equal characters."
Two screen characters are smushed into a single character if they are the
same.  The resulting character is the same as both of the original characters.
This mode does not smush the character known as a
.IR hardblank ,
which is a character that prints as a blank, but is not smushed (except
in mode 32).  See
.B FONT FILE FORMAT
for more information on
.IR hardblanks .
.TP
.BR 2 " Smush underscores."
An underscore will be
smushed into (and replaced by) any of ``|/\\[]{}()<>''.
.TP
.BR 4 " Hierarchy smushing."
Smushes certain characters together according to a hierarchy
containing 6 classes: ``|'', ``/\\'', ``[]'', ``{}'', ``()'', ``<>''.
A member of any class can be smushed into and replaced by a member of
any later class.
.TP
.BR 8 " Opposite pair smushing, type I."
Smushes opposing brackets (``[]''), braces (``{}'') and parentheses
(``()'') together, replacing them with a vertical bar (`|').
.TP
.BR 16 " Opposite pair smushing, type II."
Smushes opposing slashes (``/\\'') and less-than/greater-than (``<>'')
together, replacing them with an upper-case `X'.
.TP
.BR 32 " Hardblank smushing."
Smushes two
.I hardblanks
together, replacing them with a single
.IR hardblank .
See
.B FONT FILE FORMAT
for more information on
.IR hardblanks .
.RE
.TP
.B \-p
.\"PD 0
.TP
.B \-n
.\"PD
.B \-p
puts
.B figlet
into paragraph mode, which eliminates some spurious line
breaks when piping a multi-line file through
.BR figlet .
In paragraph mode,
.B figlet
treats line breaks within a paragraph as if they were merely blanks
between words.  (Specifically,
.B \-p
causes
.B figlet
to convert any newline which is not preceded by a newline and not
followed by a space character into a blank.)
.B \-n
puts
.B figlet
back to normal (default), in which every newline
.B figlet
reads causes it to produce a line break.
.TP
.B \-t
Sets the
.I outputwidth
to the terminal width.  If the terminal width is not
known, the previous
.I outputwidth
is retained.
.B figlet
uses the
.I outputwidth
to determine when to break lines and how to center the output.
Normally,
.B figlet
assumes 80 columns so that people with wide terminals
won't annoy the people they e-mail
.B figlet
output to.
.B \-w
and
.B \-t
override each other.
.TP
.B \-v
Prints out the version and copyright information, then exits.
.TP
.B \-D
.\"PD 0
.TP
.B \-E
.\"PD
.B \-D
switches to the German (Deutsch) character set.  Turns `[', `\\'
and `]' into umlauted A, O and U, respectively.  `{', `|' and `}' turn
into the respective lower case versions of these.  `~' turns into s-z.
.B \-E
switches back to English (default).  No other character sets are
currently supported.
.TP
.B \-F
Displays the name of the default font and the default font directory,
along with the names of the
.B figlet
fonts in the default directory, then exits.
(This will reflect any change of the default directory with the
.B \-d
option, as long as
.B \-d
is given before the
.BR \-F ).

.SH EXAMPLES
To use
.B figlet
with its default settings, simply type
.RS
.nf
.ft B

example% figlet

.ft R
.fi
.RE
and then type whatever you like.

Use the
.B \-c
option if you would prefer centered output:
.RS
.nf
.ft B

example% figlet \-c

.ft R
.fi
.RE

To change the font, use the
.B \-f
option, for example,
.RS
.nf
.ft B

example% figlet \-f script

.ft R
.fi
.RE

To see what fonts are available in the default font directory, use
.BR \-F :
.RS
.nf
.ft B

example% figlet \-F

.ft R
.fi
.RE

We have found the most common usage of
.B figlet
to be making up large text to be placed in e-mail messages.  For this
reason,
.B figlet
defaults to 80 column output.  If you are using a wider terminal, and
would like
.B figlet
to use the full width of your terminal, use the
.B \-t
option:
.RS
.nf
.ft B

example% figlet \-t

.ft R
.fi
.RE

If
.B figlet
gets its input from a file, it is often a good idea to use
.BR \-p :
.RS
.nf
.ft B

example% figlet \-p < myfile

.ft R
.fi
.RE

Of course, most of the above can be combined:
.RS
.nf
.ft B

example% figlet \-ptf shadow < anotherfile
example% figlet \-cf slant

.ft R
.fi
.RE

.SS Other Things to Try
On many systems nice effects can be obtained from the
.B lean
font by piping it through
.BR tr .
Some you might want to try are the following:

.RS
.nf
.ft B
example% figlet \-f lean | tr ' _/' ' ()'
example% figlet \-f lean | tr ' _/' './\\\\'
example% figlet \-f lean | tr ' _/' ' //'
example% figlet \-f lean | tr ' _/' '/  '
.ft R
.fi
.RE

Similar things can be done with the
.B block
font.

.SH FONT FILE FORMAT

If you would like to design a
.B figlet
font, it is usually best to begin
with an already-existing font.  Except for the first line of a font
file, most of the file format should be obvious.  If you design a font,
please let us know about it!  (See
.B AUTHORS
for e-mail addresses.)

A
.B figlet
font filename must have the suffix 
.RB `` .flf ''.

A
.B figlet
font file begins with a header.  The header consists of one line giving
information about the font, followed by zero or more comment lines,
which
.B figlet
ignores.  Following the header is the font data.

.SS The Header
The first line of a
.B figlet
font file is of the following form:

.RS
.nf
.B flf2a "hardblank height up_ht maxlen smushmode cmt_count"
.fi
.RE

for example:

.RS
.nf
.ft B
flf2a$ 6 5 20 15 1
.ft R
.fi
.RE

The first five characters of a font file should be
.RB `` flf2a ''.
.RB `` flf2 ''
is the
.I magic number
of a
.B figlet
2 font file.  The next character
.RB (` a ')
is currently ignored.  It may mean something in future versions of
.BR figlet .
If/when it does, you can be sure your fonts will still work if this
character is
.RB ` a '.

Immediately following this is the
.I hardblank
(character).  Note that there are no blanks between
.RB `` flf2a ''
and the
.IR hardblank .
.B figlet
can smush together consecutive characters in
various ways.  Normally, any character can be smushed into a blank.  A
.I hardblank
prints as a blank, but cannot be smushed into any character except a
blank, and, if
.I smushmode
32 is enabled, another
.IR hardblank .
(For example, the `r' in
.B script.flf
contains a
.IR hardblank ,
`$' in that font.  To see why this is necessary, create a copy of
.B script.flf
with this
.I hardblank
replaced by a blank.  In this new font, the ``tr'' combination looks
awful.)

By convention, the
.I hardblank
is a `$', but it can be any character besides blank, newline and null.
If you want the entire printing ASCII set available to use, make the
.I hardblank
a <delete> character.

Then comes the
.I height
(integer).  This is the number of screen lines high that each character
in the font is.

.I up_ht
(integer) is the number of lines from the baseline of a
character to the top of the character, i.e., it is the height of a
character, ignoring any descenders.  This number is currently ignored by
.BR figlet ,
but future versions may use it.

.I maxlen
(integer) is the maximum length of a line in the font file
(excluding the first line and the comments lines, which can be as long as
you want).  You are free to make this a little (or alot) too large as a
safety measure.  As an added safety measure,
.B figlet
adds a fudge factor to maxlen.

.I smushmode
(integer) determines how much
.B figlet
smushes the font.  Possible
.I smushmodes
are
.B -1
through
.BR 63 .
Typically, you'll want to use
.B -1
(no smushing),
.B 0
(push font characters together until they touch) or
.B 15
(smush various pairs of characters together into single characters).
To try out different
.I smushmodes
with your font, use the
.B \-m
command-line option.  See
.B OPTIONS
for a more detailed explanation of these
.IR smushmodes .
(Note that a
.I smushmode
of
.B -2
can be given on the command line, but not in a font file.)

Between the first line and the actual characters of the font are the
comment lines.
.I Cmt_count
specifies how many lines there are.  These lines are optional, may be as
long as you want, and are ignored by
.BR figlet .

Thus, a complete
.B figlet
font file header will look something like the following:

.RS
.nf
.ft B
flf2a$ 6 5 20 15 1
Example by Glenn Chappell 7/93
.ft R
.fi
.RE

.SS The Font Data
The font data begins on the next line after the comments and continues to
the end of the file.  The characters from ` ' to `~' are given in standard
ASCII order, followed by the extra German characters: umlauted `A', `O',
`U', `a', `o' and `u' and s-z.  Each character uses
.I height
lines, where
.I height
was given on the first line of the font file.  The characters
in the file are given exactly as they should be printed out, with two
exceptions: (1)
.I hardblanks
should be the
.I hardblank
character, not a blank, and (2) every line has an
.I endmark
character.

In most
.B figlet
fonts, the
.I endmark
is either `@' or '#'.
.B figlet
eliminates the last block of consecutive equal characters from each line
(other than the header lines) when the file is read in.  By convention,
the last line of a font character has 2
.IR endmarks ,
while all the rest have one.  This makes it
easy to see where characters begin and end.  No line should have more
than 2
.IR endmarks .

It is very important that every character in a font has the same height,
and, once the
.I endmarks
are removed, that all the lines constituting a
single font character have the same length.  Be careful also that no
lines in the font file have trailing blanks, as
.B figlet
will take these to be the
.IR endmarks .

If you don't want to define all the characters, make the undefined
characters empty, i.e., each line of the character should consist only
of an
.IR endmark .

The blank character should usually be made entirely of
.IR hardblanks .
(Some slanted fonts are an exception.)

Again, if you design a font, please let us know!

.SH FILES
.TP 20
.IB file .flf
.B figlet
font file

.SH DIAGNOSTICS
.B figlet's
diagnostics are intended to be self-explanatory.  Possible
messages are

.RS
.nf
.ft B
Usage: ...
Out of memory
Unable to open font file
Not a Figlet 2 font file
Unable to open directory

"\-t" is disabled, since ioctl is not fully implemented.
.ft R
.fi
.RE

This last message is printed when the
.B \-t
option is given, but the operating system in use does not include
the system call
.B figlet
uses to determine the terminal width.

.SH ORIGIN
.RB `` figlet ''
stands for ``Frank, Ian and Glenn's LETters''.  Inspired by Frank's
.sig, Glenn wrote (most of) it, and Ian helped.

Most of the
.B figlet
fonts were inspired by signatures on various UseNet
articles.  Since typically hundreds of people use the same style of
letters in their signatures, it was not deemed necessary to give credit
to any one font designer.

.SH BUGS
Very little error checking is done on font files.  While
.B figlet
tries to be forgiving of errors, and should (hopefully) never actually
crash, using an improperly-formatted font file with
.B figlet
will produce unpredictable output.

.B figlet
does not handle formatting characters in a very intelligent way.
A tab character is converted to a blank, and vertical-tab, form-feed and
carriage-return are each converted to a newline.  On many systems, tabs
can be handled better by piping files through
.B expand
before piping through
.BR figlet .

.B figlet
output is quite ugly if it is displayed in a proportionally-spaced font.
I suppose this is to be expected.

.SH AUTHORS
Glenn Chappell <ggc@uiuc.edu> did most of the work. 
You can e-mail him but he is not an e-mail fanatic... people who email
Glenn will probably get answers, but if you email his best friend:

Ian Chai <spectre@uiuc.edu>, who
.I is
an e-mail fanatic, you'll get answers, endless conversation about the
mysteries of life, invitations to join some 473 mailing lists and a
free toaster.  (Well, ok, maybe not the free toaster.)

Frank inspired this whole project with his .sig, but don't email
him... he's decidedly an un-email-fanatic.
